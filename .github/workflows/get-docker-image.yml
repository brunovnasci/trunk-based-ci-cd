name: Build Docker image

on:
  workflow_call:
    inputs:
      application_name:
        description: "Application name"
        required: true
        type: string
      image_tag:
        description: "Docker image tag"
        required: true
        type: string
      aws_region:
        description: "AWS region"
        required: true
        type: string
      iam_role:
        description: "IAM role to assume"
        required: true
        type: string
    outputs:
      docker-image-tag:
        description: "Docker image tag"
        value: ${{ jobs.docker.outputs.docker-image-tag }}

jobs:
  docker:
    name: Get Docker image tag
    runs-on: ubuntu-latest
    outputs:
      docker-image-tag: ${{ steps.export-docker-image-tag.outputs.tag }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{ inputs.iam_role }}"
          aws-region: "${{ inputs.aws_region }}"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Export Docker image tag
        id: export-docker-image-tag
        run: echo "tag=${{ steps.login-ecr.outputs.registry }}/${{ inputs.application_name }}:${{ inputs.image_tag }}" >> "$GITHUB_OUTPUT"
      - name: Check if Docker image exists
        run: |
          if ! docker manifest inspect -v ${{ steps.export-docker-image-tag.outputs.tag }}; then
            echo "Docker image '${{ steps.export-docker-image-tag.outputs.tag }}' doesn't exists"
            exit 1
          fi